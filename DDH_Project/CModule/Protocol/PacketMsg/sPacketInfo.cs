// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace PacketProtocol
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct sPacketInfo : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public sPacketInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int PacketNumber { get { return __p.bb.GetInt(__p.bb_pos + 0); } }
  public short PacketSize { get { return __p.bb.GetShort(__p.bb_pos + 4); } }
  public short ProtocolType { get { return __p.bb.GetShort(__p.bb_pos + 6); } }

  public static Offset<PacketProtocol.sPacketInfo> CreatesPacketInfo(FlatBufferBuilder builder, int PacketNumber, short PacketSize, short ProtocolType) {
    builder.Prep(4, 8);
    builder.PutShort(ProtocolType);
    builder.PutShort(PacketSize);
    builder.PutInt(PacketNumber);
    return new Offset<PacketProtocol.sPacketInfo>(builder.Offset);
  }
};


}
